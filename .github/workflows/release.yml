name: build-transcriber

on: [push, workflow_dispatch]

env:
  PY_VER: "3.11"
  APP_NAME: transcriber
  MODEL_DIR: models        # ‚Üê where fetch_model.py copies *.pt

# ---------- WINDOWS -------------------------------------------------
jobs:
  build-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - name: Install FFmpeg (Chocolatey)
        shell: powershell
        run: choco install ffmpeg -y

      - name: Install Python deps
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Copy Whisper model into repo
        shell: powershell
        run: python scripts/fetch_model.py

      - name: Build EXE with PyInstaller
        shell: powershell
        run: |
          $assets = python - <<'PY'
          import whisper, pathlib, sys
          print(pathlib.Path(whisper.__file__).parent / "assets")
          PY
          pyinstaller transcriber/cli.py `
            --name $env:APP_NAME --onefile `
            --add-data "$env:MODEL_DIR;whisper/models" `
            --add-data "$assets;whisper/assets" `
            --add-binary "C:\ProgramData\chocolatey\bin\ffmpeg.exe;."

      - uses: softprops/action-gh-release@v1
        with:
          files: dist/${{ env.APP_NAME }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# ---------- macOS ---------------------------------------------------
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}

      - name: Install FFmpeg
        run: brew install ffmpeg

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Copy Whisper model into repo
        run: python scripts/fetch_model.py

      - name: Build mac binary
        run: |
          ASSETS_DIR=$(python -c "import whisper, pathlib; print(pathlib.Path(whisper.__file__).parent / 'assets')")
          pyinstaller -F transcriber/cli.py --name "$APP_NAME" \
          --add-data "$MODEL_DIR:whisper/models" \
          --add-data "$ASSETS_DIR:whisper/assets" \
          --add-binary "/usr/local/bin/ffmpeg:."

      - uses: softprops/action-gh-release@v1
        with:
          files: dist/${{ env.APP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}